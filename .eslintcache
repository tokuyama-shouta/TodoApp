[{"/Users/tokuyamashouta/todo-udemy/src/index.tsx":"1","/Users/tokuyamashouta/todo-udemy/src/reportWebVitals.ts":"2","/Users/tokuyamashouta/todo-udemy/src/App.tsx":"3","/Users/tokuyamashouta/todo-udemy/src/firebase.ts":"4","/Users/tokuyamashouta/todo-udemy/src/TaskItem.tsx":"5","/Users/tokuyamashouta/todo-udemy/src/Login.tsx":"6"},{"size":713,"mtime":1608603350519,"results":"7","hashOfConfig":"8"},{"size":425,"mtime":1608537892127,"results":"9","hashOfConfig":"8"},{"size":1779,"mtime":1608602857650,"results":"10","hashOfConfig":"8"},{"size":634,"mtime":1608547863851,"results":"11","hashOfConfig":"8"},{"size":1354,"mtime":1608602218615,"results":"12","hashOfConfig":"8"},{"size":119,"mtime":1608603115385,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"16d14ue",{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/tokuyamashouta/todo-udemy/src/index.tsx",[],"/Users/tokuyamashouta/todo-udemy/src/reportWebVitals.ts",[],["28","29"],"/Users/tokuyamashouta/todo-udemy/src/App.tsx",[],"/Users/tokuyamashouta/todo-udemy/src/firebase.ts",[],"/Users/tokuyamashouta/todo-udemy/src/TaskItem.tsx",["30"],"import React, { useState } from 'react'\nimport styles from \"./TaskItem.module.css\"\nimport * as firebase from \"firebase/app\"\nimport { ListItem, TextField, Grid} from \"@material-ui/core\"\nimport DeleteOutlineOutlinedIcon from \"@material-ui/icons/DeleteOutlineOutlined\"\nimport EditOutlinedIcon from \"@material-ui/icons/EditOutlined\";\nimport { db } from './firebase';\n\ninterface PROPS {\n  id: string;\n  title: string;\n}\n\nconst TaskItem: React.FC<PROPS> = (props) => {\n  const [title, setTitle] = useState(props.title)\n\n  const editTask=()=>{\n    db.collection(\"tasks\").doc(props.id).set({title: title},{merge: true})\n  }\n\n  const deleteTask = () => {\n    db.collection(\"tasks\").doc(props.id).delete();\n  }\n\n  return (\n    <ListItem>\n      <h2>{props.title}</h2>\n      <Grid container justify=\"flex-end\">\n        <TextField\n          InputLabelProps={{\n            shrink: true,\n          }}\n          label=\"Edit task\"\n          value={title}\n          onChange={(e: React.ChangeEvent<HTMLInputElement>) => \n          setTitle(e.target.value)} \n        />\n      </Grid>\n      <button onClick={editTask} className={styles.taskitem__icon}>\n        <EditOutlinedIcon />\n      </button>\n      <button onClick={deleteTask} className={styles.taskitem__icon}>\n        <DeleteOutlineOutlinedIcon />\n      </button>\n    </ListItem>\n    \n  )\n}\n\nexport default TaskItem\n","/Users/tokuyamashouta/todo-udemy/src/Login.tsx",[],{"ruleId":"31","replacedBy":"32"},{"ruleId":"33","replacedBy":"34"},{"ruleId":"35","severity":1,"message":"36","line":3,"column":13,"nodeType":"37","messageId":"38","endLine":3,"endColumn":21},"no-native-reassign",["39"],"no-negated-in-lhs",["40"],"@typescript-eslint/no-unused-vars","'firebase' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]